/**
 * 购物车服务
 */
syntax = "proto3";

package cart;

option go_package = "./proto;common";

import "google/protobuf/empty.proto";
import "global/validate/validate.proto";

// 购物车服务接口给定义
service Cart {
  /// 添加购物车
  rpc AddCart(AddReq) returns (google.protobuf.Empty);
  /// 更新购物车
  rpc EditCart(EditReq) returns (google.protobuf.Empty);
  /// 更新购物车数量
  rpc EditCartNum(AddReq) returns (google.protobuf.Empty);
  /// 删除购物项
  rpc DelCart(SkuReq) returns (google.protobuf.Empty);
  /// 清空购物车
  rpc ClearCart(google.protobuf.Empty) returns (google.protobuf.Empty);
  /// 我的购物车
  rpc MyCart(google.protobuf.Empty) returns (CartsReply);
  /// 批量获取购物车信息
  rpc BatchGetCarts(SkusReq) returns (CartsReply);
  /// 批量删除购物车
  rpc BatchDelCart(SkusReq) returns (google.protobuf.Empty);
}

// ---- 请求结构 ----

// 添加购物车请求结构
message AddReq {
  int64 sku_id = 2 [(validate.rules).int64.gt = 0]; /// sku_id
  int32 num = 3 [(validate.rules).int32.gt = 0]; /// 数量
}

// 修改购物车购微项请求结构
message EditReq {
  int64 old_sku_id = 2 [(validate.rules).int64.gt = 0]; /// 修改前商品id
  int64 new_sku_id = 3 [(validate.rules).int64.gt = 0]; /// 修改后商品id
  int32 num = 4 [(validate.rules).int32.gt = 0];  /// 数量
}

// sku_id请求结构
message SkuReq {
  int64 sku_id = 2 [(validate.rules).int64.gt = 0]; /// sku_id
}

// 多sku_id请求结构
message SkusReq {
  int64 user_id = 1;
  repeated int64 sku_ids = 2 [(validate.rules).repeated.min_items = 1]; /// sku_id数组
}

// ---- 响应结构 ----

// 购物车列表
message CartsReply {
  repeated CartItem data = 3;
}

// ---- 基础数据结构定义 ----

// 购物车结构
message CartItem {
  int64 sku_id = 1; /// sku_id
  string title = 2; /// 商品标题
  double price = 3;  /// 商品价格
  string cover = 4; /// 商品封面
  string sku_attr = 5;  /// 商品销售属性
  int32 num = 7;  /// 数量
}