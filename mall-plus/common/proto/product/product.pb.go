//*
// 产品服务

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: product/product.proto

package common

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品详情请求结构
type SkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
}

func (x *SkuReq) Reset() {
	*x = SkuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuReq) ProtoMessage() {}

func (x *SkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuReq.ProtoReflect.Descriptor instead.
func (*SkuReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *SkuReq) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

// 商品列表请求结构
type SkuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId int64 `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"` /// 分类
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                /// 分页
}

func (x *SkuListReq) Reset() {
	*x = SkuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuListReq) ProtoMessage() {}

func (x *SkuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuListReq.ProtoReflect.Descriptor instead.
func (*SkuListReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *SkuListReq) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *SkuListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// 搜索请求结构
type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  string         `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                        /// 关键字
	CatId    int64          `protobuf:"varint,2,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`              /// 分类id
	Field    int32          `protobuf:"varint,3,opt,name=field,proto3" json:"field,omitempty"`                           /// 排序字段
	Order    int32          `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`                           /// 排序类型 0=asc 1=desc
	HasStock bool           `protobuf:"varint,5,opt,name=has_stock,json=hasStock,proto3" json:"has_stock,omitempty"`     // 是否有库存
	PriceS   int32          `protobuf:"varint,6,opt,name=price_s,json=priceS,proto3" json:"price_s,omitempty"`           /// 价格区间起始
	PriceE   int32          `protobuf:"varint,7,opt,name=price_e,json=priceE,proto3" json:"price_e,omitempty"`           /// 价格区间止
	BrandId  []int64        `protobuf:"varint,8,rep,packed,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"` /// 品牌,多选
	Attrs    []*SearchAttrs `protobuf:"bytes,9,rep,name=attrs,proto3" json:"attrs,omitempty"`                            /// 属性  eg: 1_桌子,椅子
	Page     int32          `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`                            /// 分页
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *SearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchReq) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *SearchReq) GetField() int32 {
	if x != nil {
		return x.Field
	}
	return 0
}

func (x *SearchReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SearchReq) GetHasStock() bool {
	if x != nil {
		return x.HasStock
	}
	return false
}

func (x *SearchReq) GetPriceS() int32 {
	if x != nil {
		return x.PriceS
	}
	return 0
}

func (x *SearchReq) GetPriceE() int32 {
	if x != nil {
		return x.PriceE
	}
	return 0
}

func (x *SearchReq) GetBrandId() []int64 {
	if x != nil {
		return x.BrandId
	}
	return nil
}

func (x *SearchReq) GetAttrs() []*SearchAttrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// 搜索规格结构
type SearchAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        /// 规格名id
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"` /// 规格值列表
}

func (x *SearchAttrs) Reset() {
	*x = SearchAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAttrs) ProtoMessage() {}

func (x *SearchAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAttrs.ProtoReflect.Descriptor instead.
func (*SearchAttrs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *SearchAttrs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchAttrs) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// ---- 内部请求 ----
// 评论请求结构
type CommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuIds    []int64 `protobuf:"varint,1,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids,omitempty"` /// sku_id列表
	UserId    int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        /// 用户id
	OrderId   int64   `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`     /// 订单id
	Star      int32   `protobuf:"varint,4,opt,name=star,proto3" json:"star,omitempty"`                          /// 星级
	Content   string  `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                     /// 评价内容
	Resources string  `protobuf:"bytes,6,opt,name=resources,proto3" json:"resources,omitempty"`                 /// 评价资源
}

func (x *CommentReq) Reset() {
	*x = CommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentReq) ProtoMessage() {}

func (x *CommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentReq.ProtoReflect.Descriptor instead.
func (*CommentReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *CommentReq) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

func (x *CommentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CommentReq) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *CommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentReq) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

// 产品分类
type CategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Category `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CategoryReply) Reset() {
	*x = CategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryReply) ProtoMessage() {}

func (x *CategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryReply.ProtoReflect.Descriptor instead.
func (*CategoryReply) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryReply) GetData() []*Category {
	if x != nil {
		return x.Data
	}
	return nil
}

// 商品详情
type SkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Sku `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SkuReply) Reset() {
	*x = SkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuReply) ProtoMessage() {}

func (x *SkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuReply.ProtoReflect.Descriptor instead.
func (*SkuReply) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *SkuReply) GetData() *Sku {
	if x != nil {
		return x.Data
	}
	return nil
}

// 产品列表响应结构
type SkuListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SkuEs `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"` /// 产品列表
}

func (x *SkuListReply) Reset() {
	*x = SkuListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuListReply) ProtoMessage() {}

func (x *SkuListReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuListReply.ProtoReflect.Descriptor instead.
func (*SkuListReply) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *SkuListReply) GetData() []*SkuEs {
	if x != nil {
		return x.Data
	}
	return nil
}

// 搜索结构
type SearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []*SkuEs   `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`     /// 搜索商品
	Brands []*BrandEs `protobuf:"bytes,4,rep,name=brands,proto3" json:"brands,omitempty"` /// 当前查询到的结果锁涉及到的品牌
	Attrs  []*AttrEs  `protobuf:"bytes,5,rep,name=attrs,proto3" json:"attrs,omitempty"`   /// 当前查询到的结果锁涉及到的所有属性
	Cats   []*CatEs   `protobuf:"bytes,6,rep,name=cats,proto3" json:"cats,omitempty"`     /// 当前查询到的结果锁涉及到的所有分类
}

func (x *SearchReply) Reset() {
	*x = SearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReply) ProtoMessage() {}

func (x *SearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReply.ProtoReflect.Descriptor instead.
func (*SearchReply) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *SearchReply) GetData() []*SkuEs {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchReply) GetBrands() []*BrandEs {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *SearchReply) GetAttrs() []*AttrEs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SearchReply) GetCats() []*CatEs {
	if x != nil {
		return x.Cats
	}
	return nil
}

// sku销售属性
type SkuSaleAttrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SkuSaleAttr `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SkuSaleAttrReply) Reset() {
	*x = SkuSaleAttrReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuSaleAttrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuSaleAttrReply) ProtoMessage() {}

func (x *SkuSaleAttrReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuSaleAttrReply.ProtoReflect.Descriptor instead.
func (*SkuSaleAttrReply) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *SkuSaleAttrReply) GetData() *SkuSaleAttr {
	if x != nil {
		return x.Data
	}
	return nil
}

// ---- 内部响应 ----
// sku商品信息响应结构
type SkuInfoInternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SkuInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SkuInfoInternal) Reset() {
	*x = SkuInfoInternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInfoInternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInfoInternal) ProtoMessage() {}

func (x *SkuInfoInternal) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInfoInternal.ProtoReflect.Descriptor instead.
func (*SkuInfoInternal) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{10}
}

func (x *SkuInfoInternal) GetInfo() *SkuInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// es中sku结构
type SkuEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                /// sku_id
	Title     string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                           /// 商品标题
	Price     float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                         /// 价格
	Cover     string  `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`                           /// 封面
	SaleCount int32   `protobuf:"varint,5,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	HasStock  bool    `protobuf:"varint,6,opt,name=has_stock,json=hasStock,proto3" json:"has_stock,omitempty"`    /// 是否有库存
}

func (x *SkuEs) Reset() {
	*x = SkuEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuEs) ProtoMessage() {}

func (x *SkuEs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuEs.ProtoReflect.Descriptor instead.
func (*SkuEs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{11}
}

func (x *SkuEs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuEs) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuEs) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuEs) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SkuEs) GetSaleCount() int32 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *SkuEs) GetHasStock() bool {
	if x != nil {
		return x.HasStock
	}
	return false
}

// es中品牌结构
type BrandEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 品牌id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 品牌名
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"` /// 品牌logo
}

func (x *BrandEs) Reset() {
	*x = BrandEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandEs) ProtoMessage() {}

func (x *BrandEs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandEs.ProtoReflect.Descriptor instead.
func (*BrandEs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{12}
}

func (x *BrandEs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandEs) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

// es中属性结构
type AttrEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        /// 属性id
	Name   string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     /// 属性名
	Values []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"` /// 属性值
}

func (x *AttrEs) Reset() {
	*x = AttrEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrEs) ProtoMessage() {}

func (x *AttrEs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrEs.ProtoReflect.Descriptor instead.
func (*AttrEs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{13}
}

func (x *AttrEs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttrEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttrEs) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// es中分类结构
type CatEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 分类id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 分类名
}

func (x *CatEs) Reset() {
	*x = CatEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatEs) ProtoMessage() {}

func (x *CatEs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatEs.ProtoReflect.Descriptor instead.
func (*CatEs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{14}
}

func (x *CatEs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CatEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 产品分类结构
type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             /// 分类id
	ParentId int64       `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` /// 父id
	Name     string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                          /// 分类名
	Sort     int32       `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`                         /// 排序值
	Child    []*Category `protobuf:"bytes,5,rep,name=child,proto3" json:"child,omitempty"`                        /// 下级分类列表
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{15}
}

func (x *Category) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Category) GetChild() []*Category {
	if x != nil {
		return x.Child
	}
	return nil
}

// 商品详情结构
type Sku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 /// sku_id
	SpuId     int64        `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`              /// spu_id
	CatId     int64        `protobuf:"varint,3,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`              /// 分类id
	BrandId   int64        `protobuf:"varint,4,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`        /// 品牌id
	Title     string       `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                            /// 商品标题
	Desc      string       `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                              /// 描述
	Cover     string       `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                            /// 封面图
	Subtitle  string       `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                      /// 副标题
	Price     float64      `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`                          /// 价格
	SaleCount int64        `protobuf:"varint,10,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	Stock     int32        `protobuf:"varint,11,opt,name=stock,proto3" json:"stock,omitempty"`                          /// 库存
	IsMany    bool         `protobuf:"varint,12,opt,name=is_many,json=isMany,proto3" json:"is_many,omitempty"`          /// 是否多规格
	Skus      []*Skus      `protobuf:"bytes,13,rep,name=skus,proto3" json:"skus,omitempty"`                             /// spu下所有sku商品
	Attrs     []*Attrs     `protobuf:"bytes,14,rep,name=attrs,proto3" json:"attrs,omitempty"`                           /// 当前sku对应spu规格属性
	SaleAttrs []*SaleAttrs `protobuf:"bytes,15,rep,name=sale_attrs,json=saleAttrs,proto3" json:"sale_attrs,omitempty"`  ///当前sku下的销售属性
	Banners   []string     `protobuf:"bytes,16,rep,name=banners,proto3" json:"banners,omitempty"`                       /// sku图集
	Mains     []string     `protobuf:"bytes,17,rep,name=mains,proto3" json:"mains,omitempty"`                           /// spu介绍
}

func (x *Sku) Reset() {
	*x = Sku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sku) ProtoMessage() {}

func (x *Sku) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sku.ProtoReflect.Descriptor instead.
func (*Sku) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{16}
}

func (x *Sku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sku) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *Sku) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *Sku) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Sku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Sku) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Sku) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Sku) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *Sku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Sku) GetSaleCount() int64 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *Sku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Sku) GetIsMany() bool {
	if x != nil {
		return x.IsMany
	}
	return false
}

func (x *Sku) GetSkus() []*Skus {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *Sku) GetAttrs() []*Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Sku) GetSaleAttrs() []*SaleAttrs {
	if x != nil {
		return x.SaleAttrs
	}
	return nil
}

func (x *Sku) GetBanners() []string {
	if x != nil {
		return x.Banners
	}
	return nil
}

func (x *Sku) GetMains() []string {
	if x != nil {
		return x.Mains
	}
	return nil
}

// sku销售属性结构
type SkuSaleAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                /// sku_id
	IsMany    bool         `protobuf:"varint,2,opt,name=is_many,json=isMany,proto3" json:"is_many,omitempty"`          /// 是否多规格
	Skus      []*Skus      `protobuf:"bytes,11,rep,name=skus,proto3" json:"skus,omitempty"`                            /// spu下所有sku商品
	SaleAttrs []*SaleAttrs `protobuf:"bytes,13,rep,name=sale_attrs,json=saleAttrs,proto3" json:"sale_attrs,omitempty"` ///当前sku下的销售属性
}

func (x *SkuSaleAttr) Reset() {
	*x = SkuSaleAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuSaleAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuSaleAttr) ProtoMessage() {}

func (x *SkuSaleAttr) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuSaleAttr.ProtoReflect.Descriptor instead.
func (*SkuSaleAttr) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{17}
}

func (x *SkuSaleAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuSaleAttr) GetIsMany() bool {
	if x != nil {
		return x.IsMany
	}
	return false
}

func (x *SkuSaleAttr) GetSkus() []*Skus {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *SkuSaleAttr) GetSaleAttrs() []*SaleAttrs {
	if x != nil {
		return x.SaleAttrs
	}
	return nil
}

// sku商品信息
type SkuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 /// sku_id
	SpuId     int64  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`              /// spu_id
	CatId     int64  `protobuf:"varint,3,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`              /// 分类id
	BrandId   int64  `protobuf:"varint,4,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`        /// 品牌id
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                            /// 商品标题
	Desc      string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                              /// 描述
	Cover     string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                            /// 封面图
	Subtitle  string `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                      /// 副标题
	Price     int64  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`                           /// 价格
	SaleCount int64  `protobuf:"varint,10,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	AttrValue string `protobuf:"bytes,11,opt,name=attr_value,json=attrValue,proto3" json:"attr_value,omitempty"`  /// 销售属性值
}

func (x *SkuInfo) Reset() {
	*x = SkuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInfo) ProtoMessage() {}

func (x *SkuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInfo.ProtoReflect.Descriptor instead.
func (*SkuInfo) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{18}
}

func (x *SkuInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuInfo) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SkuInfo) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *SkuInfo) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SkuInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SkuInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SkuInfo) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *SkuInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuInfo) GetSaleCount() int64 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *SkuInfo) GetAttrValue() string {
	if x != nil {
		return x.AttrValue
	}
	return ""
}

// 属性分组以及分组下规格属性结构
type Attrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int64   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      /// 规格属性分组id
	GroupName string  `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` /// 规格属性分组名
	Items     []*Attr `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                          /// 分组下所有规格属性
}

func (x *Attrs) Reset() {
	*x = Attrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attrs) ProtoMessage() {}

func (x *Attrs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attrs.ProtoReflect.Descriptor instead.
func (*Attrs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{19}
}

func (x *Attrs) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Attrs) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Attrs) GetItems() []*Attr {
	if x != nil {
		return x.Items
	}
	return nil
}

// 属性结构
type Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`      /// 属性id
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`   /// 属性名
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` /// 属性值
}

func (x *Attr) Reset() {
	*x = Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{20}
}

func (x *Attr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attr) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// spu下所有sku
type Skus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int64      `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"` /// sku_id
	Price float64    `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`             /// 价格
	Stock int32      `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`              /// 库存
	Attrs []*SkuAttr `protobuf:"bytes,4,rep,name=attrs,proto3" json:"attrs,omitempty"`               /// 对应的销售属性
}

func (x *Skus) Reset() {
	*x = Skus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skus) ProtoMessage() {}

func (x *Skus) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skus.ProtoReflect.Descriptor instead.
func (*Skus) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{21}
}

func (x *Skus) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *Skus) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Skus) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Skus) GetAttrs() []*SkuAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

// 销售属性结构
type SkuAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId    int64  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`         /// 属性id
	ValueId   int64  `protobuf:"varint,2,opt,name=value_id,json=valueId,proto3" json:"value_id,omitempty"`      /// 属性值id
	AttrName  string `protobuf:"bytes,3,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`    /// 属性名
	ValueName string `protobuf:"bytes,4,opt,name=value_name,json=valueName,proto3" json:"value_name,omitempty"` /// 属性值
}

func (x *SkuAttr) Reset() {
	*x = SkuAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuAttr) ProtoMessage() {}

func (x *SkuAttr) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuAttr.ProtoReflect.Descriptor instead.
func (*SkuAttr) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{22}
}

func (x *SkuAttr) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SkuAttr) GetValueId() int64 {
	if x != nil {
		return x.ValueId
	}
	return 0
}

func (x *SkuAttr) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SkuAttr) GetValueName() string {
	if x != nil {
		return x.ValueName
	}
	return ""
}

// sku下所有销售属性结构
type SaleAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId   int64       `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`      /// 销售属性id
	AttrName string      `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"` /// 销售属性名
	Values   []*SkuValue `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`                     /// 属性值列表
}

func (x *SaleAttrs) Reset() {
	*x = SaleAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleAttrs) ProtoMessage() {}

func (x *SaleAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleAttrs.ProtoReflect.Descriptor instead.
func (*SaleAttrs) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{23}
}

func (x *SaleAttrs) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SaleAttrs) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SaleAttrs) GetValues() []*SkuValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// 规格值结构
type SkuValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 属性值id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 属性名
}

func (x *SkuValue) Reset() {
	*x = SkuValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuValue) ProtoMessage() {}

func (x *SkuValue) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuValue.ProtoReflect.Descriptor instead.
func (*SkuValue) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{24}
}

func (x *SkuValue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_product_product_proto protoreflect.FileDescriptor

var file_product_product_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a,
	0x06, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0a, 0x53, 0x6b, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x92, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x61, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x68, 0x61, 0x73, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x45, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xd6, 0x01, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x73, 0x12, 0x20,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x72, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x05, 0x18, 0xf4, 0x03, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a,
	0x08, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x0c, 0x53,
	0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x45, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa6, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x45, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x45, 0x73, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x45, 0x73, 0x52, 0x05, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74,
	0x45, 0x73, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x53, 0x6b, 0x75, 0x53,
	0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x0f, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x95, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61,
	0x73, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68,
	0x61, 0x73, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x41, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x44, 0x0a, 0x06, 0x41, 0x74,
	0x74, 0x72, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x2b, 0x0a, 0x05, 0x43, 0x61, 0x74, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x27, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0xca, 0x03, 0x0a, 0x03, 0x53, 0x6b, 0x75,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x6b, 0x75,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x6b, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0b, 0x53, 0x6b, 0x75, 0x53, 0x61, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x21,
	0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6b, 0x75,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x66, 0x0a, 0x05, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x40, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x04, 0x53, 0x6b, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x26,
	0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x6c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53,
	0x6b, 0x75, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x2e, 0x0a, 0x08, 0x53, 0x6b, 0x75, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32,
	0x9b, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x09, 0x53,
	0x6b, 0x75, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x6b, 0x75,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x6b, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x61, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x53, 0x70, 0x75, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x10, 0x5a,
	0x0e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_product_proto_rawDescOnce sync.Once
	file_product_product_proto_rawDescData = file_product_product_proto_rawDesc
)

func file_product_product_proto_rawDescGZIP() []byte {
	file_product_product_proto_rawDescOnce.Do(func() {
		file_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_product_proto_rawDescData)
	})
	return file_product_product_proto_rawDescData
}

var file_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_product_product_proto_goTypes = []interface{}{
	(*SkuReq)(nil),           // 0: product.SkuReq
	(*SkuListReq)(nil),       // 1: product.SkuListReq
	(*SearchReq)(nil),        // 2: product.SearchReq
	(*SearchAttrs)(nil),      // 3: product.SearchAttrs
	(*CommentReq)(nil),       // 4: product.CommentReq
	(*CategoryReply)(nil),    // 5: product.CategoryReply
	(*SkuReply)(nil),         // 6: product.SkuReply
	(*SkuListReply)(nil),     // 7: product.SkuListReply
	(*SearchReply)(nil),      // 8: product.SearchReply
	(*SkuSaleAttrReply)(nil), // 9: product.SkuSaleAttrReply
	(*SkuInfoInternal)(nil),  // 10: product.SkuInfoInternal
	(*SkuEs)(nil),            // 11: product.SkuEs
	(*BrandEs)(nil),          // 12: product.BrandEs
	(*AttrEs)(nil),           // 13: product.AttrEs
	(*CatEs)(nil),            // 14: product.CatEs
	(*Category)(nil),         // 15: product.Category
	(*Sku)(nil),              // 16: product.Sku
	(*SkuSaleAttr)(nil),      // 17: product.SkuSaleAttr
	(*SkuInfo)(nil),          // 18: product.SkuInfo
	(*Attrs)(nil),            // 19: product.Attrs
	(*Attr)(nil),             // 20: product.Attr
	(*Skus)(nil),             // 21: product.Skus
	(*SkuAttr)(nil),          // 22: product.SkuAttr
	(*SaleAttrs)(nil),        // 23: product.SaleAttrs
	(*SkuValue)(nil),         // 24: product.SkuValue
	(*emptypb.Empty)(nil),    // 25: google.protobuf.Empty
}
var file_product_product_proto_depIdxs = []int32{
	3,  // 0: product.SearchReq.attrs:type_name -> product.SearchAttrs
	15, // 1: product.CategoryReply.data:type_name -> product.Category
	16, // 2: product.SkuReply.data:type_name -> product.Sku
	11, // 3: product.SkuListReply.data:type_name -> product.SkuEs
	11, // 4: product.SearchReply.data:type_name -> product.SkuEs
	12, // 5: product.SearchReply.brands:type_name -> product.BrandEs
	13, // 6: product.SearchReply.attrs:type_name -> product.AttrEs
	14, // 7: product.SearchReply.cats:type_name -> product.CatEs
	17, // 8: product.SkuSaleAttrReply.data:type_name -> product.SkuSaleAttr
	18, // 9: product.SkuInfoInternal.info:type_name -> product.SkuInfo
	15, // 10: product.Category.child:type_name -> product.Category
	21, // 11: product.Sku.skus:type_name -> product.Skus
	19, // 12: product.Sku.attrs:type_name -> product.Attrs
	23, // 13: product.Sku.sale_attrs:type_name -> product.SaleAttrs
	21, // 14: product.SkuSaleAttr.skus:type_name -> product.Skus
	23, // 15: product.SkuSaleAttr.sale_attrs:type_name -> product.SaleAttrs
	20, // 16: product.Attrs.items:type_name -> product.Attr
	22, // 17: product.Skus.attrs:type_name -> product.SkuAttr
	24, // 18: product.SaleAttrs.values:type_name -> product.SkuValue
	25, // 19: product.Product.CategoryTree:input_type -> google.protobuf.Empty
	2,  // 20: product.Product.SkuSearch:input_type -> product.SearchReq
	1,  // 21: product.Product.SkuList:input_type -> product.SkuListReq
	0,  // 22: product.Product.SkuDetail:input_type -> product.SkuReq
	0,  // 23: product.Product.GetSkuSaleAttrs:input_type -> product.SkuReq
	0,  // 24: product.Product.GetSkuByID:input_type -> product.SkuReq
	4,  // 25: product.Product.SpuComment:input_type -> product.CommentReq
	5,  // 26: product.Product.CategoryTree:output_type -> product.CategoryReply
	8,  // 27: product.Product.SkuSearch:output_type -> product.SearchReply
	7,  // 28: product.Product.SkuList:output_type -> product.SkuListReply
	6,  // 29: product.Product.SkuDetail:output_type -> product.SkuReply
	9,  // 30: product.Product.GetSkuSaleAttrs:output_type -> product.SkuSaleAttrReply
	10, // 31: product.Product.GetSkuByID:output_type -> product.SkuInfoInternal
	25, // 32: product.Product.SpuComment:output_type -> google.protobuf.Empty
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_product_product_proto_init() }
func file_product_product_proto_init() {
	if File_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuSaleAttrReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInfoInternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuSaleAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_product_proto_goTypes,
		DependencyIndexes: file_product_product_proto_depIdxs,
		MessageInfos:      file_product_product_proto_msgTypes,
	}.Build()
	File_product_product_proto = out.File
	file_product_product_proto_rawDesc = nil
	file_product_product_proto_goTypes = nil
	file_product_product_proto_depIdxs = nil
}
