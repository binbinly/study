//*
// 秒杀服务

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: seckill/seckill.proto

package gateway

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 秒杀请求结构
type KillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId     int64  `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	AddressId int64  `protobuf:"varint,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Num       int64  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KillReq) Reset() {
	*x = KillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillReq) ProtoMessage() {}

func (x *KillReq) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillReq.ProtoReflect.Descriptor instead.
func (*KillReq) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{0}
}

func (x *KillReq) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *KillReq) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *KillReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *KillReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 场次id
type SessionIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` /// 场次id
}

func (x *SessionIdReq) Reset() {
	*x = SessionIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIdReq) ProtoMessage() {}

func (x *SessionIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIdReq.ProtoReflect.Descriptor instead.
func (*SessionIdReq) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{1}
}

func (x *SessionIdReq) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// 商品id
type SkuIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"` /// 商品id
}

func (x *SkuIdReq) Reset() {
	*x = SkuIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuIdReq) ProtoMessage() {}

func (x *SkuIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuIdReq.ProtoReflect.Descriptor instead.
func (*SkuIdReq) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{2}
}

func (x *SkuIdReq) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

//秒杀响应结构
type KillReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      /// 状态码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` /// 消息
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       /// 订单号
}

func (x *KillReply) Reset() {
	*x = KillReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillReply) ProtoMessage() {}

func (x *KillReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillReply.ProtoReflect.Descriptor instead.
func (*KillReply) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{3}
}

func (x *KillReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *KillReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KillReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//秒杀场次响应结构
type SessionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      /// 状态码
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` /// 消息
	Data    []*Session `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SessionsReply) Reset() {
	*x = SessionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionsReply) ProtoMessage() {}

func (x *SessionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionsReply.ProtoReflect.Descriptor instead.
func (*SessionsReply) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{4}
}

func (x *SessionsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SessionsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SessionsReply) GetData() []*Session {
	if x != nil {
		return x.Data
	}
	return nil
}

//秒杀商品列表
type SkusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      /// 状态码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` /// 消息
	Data    []*Sku `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SkusReply) Reset() {
	*x = SkusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkusReply) ProtoMessage() {}

func (x *SkusReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkusReply.ProtoReflect.Descriptor instead.
func (*SkusReply) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{5}
}

func (x *SkusReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SkusReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SkusReply) GetData() []*Sku {
	if x != nil {
		return x.Data
	}
	return nil
}

//秒杀商品信息
type SkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      /// 状态码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` /// 消息
	Data    *Sku   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SkuReply) Reset() {
	*x = SkuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuReply) ProtoMessage() {}

func (x *SkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuReply.ProtoReflect.Descriptor instead.
func (*SkuReply) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{6}
}

func (x *SkuReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SkuReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SkuReply) GetData() *Sku {
	if x != nil {
		return x.Data
	}
	return nil
}

// 秒杀商品信息
type Sku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             ///商品id
	Price         float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`                                      ///秒杀价格
	Count         int32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                                       ///秒杀数量
	Limit         int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                                       ///个人限购
	OriginalPrice float64 `protobuf:"fixed64,5,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"` ///原价
	Title         string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                                        ///标题
	Cover         string  `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                                        ///封面
	Key           string  `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`                                            ///加密key
	Open          bool    `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`                                         /// 是否正在秒杀
	StartAt       int64   `protobuf:"varint,10,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                   /// 秒杀开始时间
}

func (x *Sku) Reset() {
	*x = Sku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sku) ProtoMessage() {}

func (x *Sku) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sku.ProtoReflect.Descriptor instead.
func (*Sku) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{7}
}

func (x *Sku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Sku) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Sku) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Sku) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *Sku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Sku) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Sku) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Sku) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Sku) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

// 场次信息
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`     /// 场次id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`  /// 场次名
	Open bool   `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"` /// 是否正在秒杀
	Skus []*Sku `protobuf:"bytes,4,rep,name=skus,proto3" json:"skus,omitempty"`  /// 所有秒杀商品
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_seckill_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_seckill_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_seckill_seckill_proto_rawDescGZIP(), []int{8}
}

func (x *Session) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Session) GetSkus() []*Sku {
	if x != nil {
		return x.Skus
	}
	return nil
}

var File_seckill_seckill_proto protoreflect.FileDescriptor

var file_seckill_seckill_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x07,
	0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01,
	0x20, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2a,
	0x0a, 0x08, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x6b,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x09, 0x4b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b,
	0x0a, 0x09, 0x53, 0x6b, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x08, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x6b,
	0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xeb, 0x01, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x63, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x2e, 0x53, 0x6b, 0x75, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x32, 0xef, 0x02, 0x0a, 0x07, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x4b, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x10,
	0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x73,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x2e, 0x53, 0x6b, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x2f, 0x73, 0x6b, 0x75, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x11, 0x5a, 0x0f,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_seckill_seckill_proto_rawDescOnce sync.Once
	file_seckill_seckill_proto_rawDescData = file_seckill_seckill_proto_rawDesc
)

func file_seckill_seckill_proto_rawDescGZIP() []byte {
	file_seckill_seckill_proto_rawDescOnce.Do(func() {
		file_seckill_seckill_proto_rawDescData = protoimpl.X.CompressGZIP(file_seckill_seckill_proto_rawDescData)
	})
	return file_seckill_seckill_proto_rawDescData
}

var file_seckill_seckill_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_seckill_seckill_proto_goTypes = []interface{}{
	(*KillReq)(nil),       // 0: seckill.KillReq
	(*SessionIdReq)(nil),  // 1: seckill.SessionIdReq
	(*SkuIdReq)(nil),      // 2: seckill.SkuIdReq
	(*KillReply)(nil),     // 3: seckill.KillReply
	(*SessionsReply)(nil), // 4: seckill.SessionsReply
	(*SkusReply)(nil),     // 5: seckill.SkusReply
	(*SkuReply)(nil),      // 6: seckill.SkuReply
	(*Sku)(nil),           // 7: seckill.Sku
	(*Session)(nil),       // 8: seckill.Session
	(*emptypb.Empty)(nil), // 9: google.protobuf.Empty
}
var file_seckill_seckill_proto_depIdxs = []int32{
	8, // 0: seckill.SessionsReply.data:type_name -> seckill.Session
	7, // 1: seckill.SkusReply.data:type_name -> seckill.Sku
	7, // 2: seckill.SkuReply.data:type_name -> seckill.Sku
	7, // 3: seckill.Session.skus:type_name -> seckill.Sku
	0, // 4: seckill.Seckill.Kill:input_type -> seckill.KillReq
	9, // 5: seckill.Seckill.GetSessionAll:input_type -> google.protobuf.Empty
	1, // 6: seckill.Seckill.GetSkusList:input_type -> seckill.SessionIdReq
	2, // 7: seckill.Seckill.GetSkuByID:input_type -> seckill.SkuIdReq
	3, // 8: seckill.Seckill.Kill:output_type -> seckill.KillReply
	4, // 9: seckill.Seckill.GetSessionAll:output_type -> seckill.SessionsReply
	5, // 10: seckill.Seckill.GetSkusList:output_type -> seckill.SkusReply
	6, // 11: seckill.Seckill.GetSkuByID:output_type -> seckill.SkuReply
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_seckill_seckill_proto_init() }
func file_seckill_seckill_proto_init() {
	if File_seckill_seckill_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_seckill_seckill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_seckill_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seckill_seckill_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seckill_seckill_proto_goTypes,
		DependencyIndexes: file_seckill_seckill_proto_depIdxs,
		MessageInfos:      file_seckill_seckill_proto_msgTypes,
	}.Build()
	File_seckill_seckill_proto = out.File
	file_seckill_seckill_proto_rawDesc = nil
	file_seckill_seckill_proto_goTypes = nil
	file_seckill_seckill_proto_depIdxs = nil
}
